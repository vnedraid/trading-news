import asyncio
import json
from temporalio.client import Client
from data_generator import RSSDataGenerator


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ Temporal"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É Temporal —Å–µ—Ä–≤–µ—Ä—É
    client = await Client.connect("localhost:7233")
    
    print("üöÄ Signal Sender –∑–∞–ø—É—â–µ–Ω. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É...")
    print("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Temporal: localhost:7233")
    print("üì∞ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö RSS feed –∑–∞–ø–∏—Å–µ–π...")
    print("-" * 50)
    
    counter = 1
    
    try:
        while True:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é RSS –∑–∞–ø–∏—Å—å
            rss_record = RSSDataGenerator.generate_random_record()
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ JSON –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            signal_data = {
                "id": counter,
                "timestamp": rss_record.published_date.isoformat(),
                "data": rss_record.to_dict()
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –≤ workflow
            try:
                await client.get_workflow_handle("news-feed-workflow").signal(
                    "news-feed-signal",
                    signal_data
                )
                
                print(f"‚úÖ –°–∏–≥–Ω–∞–ª #{counter} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:")
                print(f"   üì∞ {rss_record.title}")
                print(f"   üè∑Ô∏è  {rss_record.category} | {rss_record.sentiment}")
                print(f"   üîó {rss_record.source}")
                print()
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ #{counter}: {e}")
            
            counter += 1
            
            # –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–∏–≥–Ω–∞–ª–æ–º
            await asyncio.sleep(1)
            
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Signal Sender...")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())
