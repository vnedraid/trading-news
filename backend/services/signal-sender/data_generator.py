import random
from datetime import datetime, timedelta
from models import RSSFeedRecord


class RSSDataGenerator:
    """Генератор случайных данных RSS для тестирования"""
    
    TITLES = [
        "Центральный банк повысил ключевую ставку на 0.25%",
        "Акции технологических компаний показали рост",
        "Нефть подорожала на фоне геополитической напряженности",
        "Доллар укрепился против основных валют",
        "Криптовалюты демонстрируют волатильность",
        "Золото достигло новых максимумов",
        "Инфляция в еврозоне превысила прогнозы",
        "Фондовые индексы закрылись в плюсе",
        "Торговая война влияет на мировые рынки",
        "Новые экономические данные превзошли ожидания"
    ]
    
    DESCRIPTIONS = [
        "Решение принято на фоне растущих инфляционных давлений и необходимости стабилизации экономики.",
        "Инвесторы позитивно отреагировали на квартальные отчеты крупных технологических корпораций.",
        "Аналитики прогнозируют дальнейший рост цен на энергоносители в ближайшие месяцы.",
        "Укрепление американской валюты связано с ожиданиями изменения монетарной политики ФРС.",
        "Рынок цифровых активов продолжает привлекать внимание институциональных инвесторов.",
        "Драгоценные металлы остаются популярным инструментом хеджирования в условиях неопределенности.",
        "Европейский центральный банк может пересмотреть свою политику в ответ на новые данные.",
        "Положительная динамика на рынках поддерживается улучшением экономических показателей.",
        "Торговые споры между крупными экономиками создают дополнительные риски для глобального роста.",
        "Публикация статистики подтвердила устойчивость экономического восстановления."
    ]
    
    SOURCES = [
        "Reuters",
        "Bloomberg",
        "Financial Times",
        "Wall Street Journal",
        "CNBC",
        "MarketWatch",
        "Yahoo Finance",
        "Investing.com"
    ]
    
    CATEGORIES = [
        "Центральные банки",
        "Фондовый рынок",
        "Валютный рынок",
        "Сырьевые товары",
        "Криптовалюты",
        "Экономические данные",
        "Геополитика"
    ]
    
    SENTIMENTS = ["positive", "negative", "neutral"]
    
    @classmethod
    def generate_random_record(cls) -> RSSFeedRecord:
        """Генерирует случайную запись RSS feed"""
        return RSSFeedRecord(
            title=random.choice(cls.TITLES),
            description=random.choice(cls.DESCRIPTIONS),
            link=f"https://example.com/news/{random.randint(1000, 9999)}",
            published_date=datetime.now() - timedelta(minutes=random.randint(0, 60)),
            source=random.choice(cls.SOURCES),
            category=random.choice(cls.CATEGORIES),
            sentiment=random.choice(cls.SENTIMENTS)
        )